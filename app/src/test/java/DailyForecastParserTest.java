import org.junit.Assert;
import org.junit.Test;
import org.roko.smplweather.model.HourlyForecast;
import org.roko.smplweather.utils.DailyForecastParser;

public class DailyForecastParserTest {

    @Test
    public void testParse() {
        String payload = "<script language=\"JavaScript\" type=\"text/javascript\"> jQuery(document).ready( function() {  var dt_temp=0; var dt_rh=0; var dt_press=0; var arr_temperature=[]; var arr_wind_dir=[]; var arr_wind_dir_name=[]; var arr_wind_speed=[]; var arr_pressure=[]; var arr_precip_val=[]; var arr_precip_ver=[]; var arr_humidity=[]; var arr_phenomenon=[]; var arr_phenomenon_name=[]; arr_temperature=[{x: Date.UTC(2019,0,16,16), y: -3.7, ind: 0}, {x: Date.UTC(2019,0,16,19), y: -2.2, ind: 3}, {x: Date.UTC(2019,0,16,22), y: -1.9, ind: 6}, {x: Date.UTC(2019,0,17,1), y: -2.9, ind: 9}, {x: Date.UTC(2019,0,17,4), y: -3.9, ind: 12}, {x: Date.UTC(2019,0,17,7), y: -5.0, ind: 15}, {x: Date.UTC(2019,0,17,10), y: -5.3, ind: 18}, {x: Date.UTC(2019,0,17,13), y: -5.2, ind: 21}, {x: Date.UTC(2019,0,17,16), y: -5.1, ind: 24}, {x: Date.UTC(2019,0,17,19), y: -3.8, ind: 27}, {x: Date.UTC(2019,0,17,22), y: -5.3, ind: 30}, {x: Date.UTC(2019,0,18,1), y: -8.7, ind: 33}, {x: Date.UTC(2019,0,18,4), y: -12.3, ind: 36}, {x: Date.UTC(2019,0,18,7), y: -13.1, ind: 39}, {x: Date.UTC(2019,0,18,10), y: -10.9, ind: 42}, {x: Date.UTC(2019,0,18,13), y: -9.0, ind: 45}, {x: Date.UTC(2019,0,18,16), y: -7.2, ind: 48}, {x: Date.UTC(2019,0,18,19), y: -6.0, ind: 51}, {x: Date.UTC(2019,0,18,22), y: -5.8, ind: 54}, {x: Date.UTC(2019,0,19,1), y: -7.3, ind: 57}, {x: Date.UTC(2019,0,19,4), y: -5.3, ind: 60}, {x: Date.UTC(2019,0,19,7), y: -4.8, ind: 63}, {x: Date.UTC(2019,0,19,10), y: -4.1, ind: 66}, {x: Date.UTC(2019,0,19,13), y: -2.9, ind: 69}, {x: Date.UTC(2019,0,19,16), y: -1.7, ind: 72}, {x: Date.UTC(2019,0,19,19), y: -0.6, ind: 75}, {x: Date.UTC(2019,0,19,22), y: -1.6, ind: 78}, {x: Date.UTC(2019,0,20,1), y: -2.8, ind: 81}]; arr_wind_dir=[{x: Date.UTC(2019,0,16,16), y: 199, ind: 0}, {x: Date.UTC(2019,0,16,19), y: 207, ind: 3}, {x: Date.UTC(2019,0,16,22), y: 221, ind: 6}, {x: Date.UTC(2019,0,17,1), y: 247, ind: 9}, {x: Date.UTC(2019,0,17,4), y: 283, ind: 12}, {x: Date.UTC(2019,0,17,7), y: 268, ind: 15}, {x: Date.UTC(2019,0,17,10), y: 251, ind: 18}, {x: Date.UTC(2019,0,17,13), y: 233, ind: 21}, {x: Date.UTC(2019,0,17,16), y: 218, ind: 24}, {x: Date.UTC(2019,0,17,19), y: 217, ind: 27}, {x: Date.UTC(2019,0,17,22), y: 216, ind: 30}, {x: Date.UTC(2019,0,18,1), y: 216, ind: 33}, {x: Date.UTC(2019,0,18,4), y: 215, ind: 36}, {x: Date.UTC(2019,0,18,7), y: 212, ind: 39}, {x: Date.UTC(2019,0,18,10), y: 210, ind: 42}, {x: Date.UTC(2019,0,18,13), y: 207, ind: 45}, {x: Date.UTC(2019,0,18,16), y: 204, ind: 48}, {x: Date.UTC(2019,0,18,19), y: 208, ind: 51}, {x: Date.UTC(2019,0,18,22), y: 211, ind: 54}, {x: Date.UTC(2019,0,19,1), y: 215, ind: 57}, {x: Date.UTC(2019,0,19,4), y: 218, ind: 60}, {x: Date.UTC(2019,0,19,7), y: 231, ind: 63}, {x: Date.UTC(2019,0,19,10), y: 249, ind: 66}, {x: Date.UTC(2019,0,19,13), y: 271, ind: 69}, {x: Date.UTC(2019,0,19,16), y: 292, ind: 72}, {x: Date.UTC(2019,0,19,19), y: 281, ind: 75}, {x: Date.UTC(2019,0,19,22), y: 270, ind: 78}, {x: Date.UTC(2019,0,20,1), y: 259, ind: 81}]; arr_wind_dir_name=[{x: Date.UTC(2019,0,16,16), y: \"Ю\", ind: 0}, {x: Date.UTC(2019,0,16,19), y: \"Ю-3\", ind: 3}, {x: Date.UTC(2019,0,16,22), y: \"Ю-3\", ind: 6}, {x: Date.UTC(2019,0,17,1), y: \"Ю-3\", ind: 9}, {x: Date.UTC(2019,0,17,4), y: \"З\", ind: 12}, {x: Date.UTC(2019,0,17,7), y: \"З\", ind: 15}, {x: Date.UTC(2019,0,17,10), y: \"З\", ind: 18}, {x: Date.UTC(2019,0,17,13), y: \"Ю-3\", ind: 21}, {x: Date.UTC(2019,0,17,16), y: \"Ю-3\", ind: 24}, {x: Date.UTC(2019,0,17,19), y: \"Ю-3\", ind: 27}, {x: Date.UTC(2019,0,17,22), y: \"Ю-3\", ind: 30}, {x: Date.UTC(2019,0,18,1), y: \"Ю-3\", ind: 33}, {x: Date.UTC(2019,0,18,4), y: \"Ю-3\", ind: 36}, {x: Date.UTC(2019,0,18,7), y: \"Ю-3\", ind: 39}, {x: Date.UTC(2019,0,18,10), y: \"Ю-3\", ind: 42}, {x: Date.UTC(2019,0,18,13), y: \"Ю-3\", ind: 45}, {x: Date.UTC(2019,0,18,16), y: \"Ю-3\", ind: 48}, {x: Date.UTC(2019,0,18,19), y: \"Ю-3\", ind: 51}, {x: Date.UTC(2019,0,18,22), y: \"Ю-3\", ind: 54}, {x: Date.UTC(2019,0,19,1), y: \"Ю-3\", ind: 57}, {x: Date.UTC(2019,0,19,4), y: \"Ю-3\", ind: 60}, {x: Date.UTC(2019,0,19,7), y: \"Ю-3\", ind: 63}, {x: Date.UTC(2019,0,19,10), y: \"З\", ind: 66}, {x: Date.UTC(2019,0,19,13), y: \"З\", ind: 69}, {x: Date.UTC(2019,0,19,16), y: \"З\", ind: 72}, {x: Date.UTC(2019,0,19,19), y: \"З\", ind: 75}, {x: Date.UTC(2019,0,19,22), y: \"З\", ind: 78}, {x: Date.UTC(2019,0,20,1), y: \"З\", ind: 81}]; arr_wind_speed=[{x: Date.UTC(2019,0,16,16), y: 7, ind: 0}, {x: Date.UTC(2019,0,16,19), y: 5, ind: 3}, {x: Date.UTC(2019,0,16,22), y: 4, ind: 6}, {x: Date.UTC(2019,0,17,1), y: 3, ind: 9}, {x: Date.UTC(2019,0,17,4), y: 3, ind: 12}, {x: Date.UTC(2019,0,17,7), y: 3, ind: 15}, {x: Date.UTC(2019,0,17,10), y: 3, ind: 18}, {x: Date.UTC(2019,0,17,13), y: 3, ind: 21}, {x: Date.UTC(2019,0,17,16), y: 3, ind: 24}, {x: Date.UTC(2019,0,17,19), y: 3, ind: 27}, {x: Date.UTC(2019,0,17,22), y: 4, ind: 30}, {x: Date.UTC(2019,0,18,1), y: 4, ind: 33}, {x: Date.UTC(2019,0,18,4), y: 4, ind: 36}, {x: Date.UTC(2019,0,18,7), y: 4, ind: 39}, {x: Date.UTC(2019,0,18,10), y: 4, ind: 42}, {x: Date.UTC(2019,0,18,13), y: 4, ind: 45}, {x: Date.UTC(2019,0,18,16), y: 4, ind: 48}, {x: Date.UTC(2019,0,18,19), y: 4, ind: 51}, {x: Date.UTC(2019,0,18,22), y: 4, ind: 54}, {x: Date.UTC(2019,0,19,1), y: 4, ind: 57}, {x: Date.UTC(2019,0,19,4), y: 4, ind: 60}, {x: Date.UTC(2019,0,19,7), y: 3, ind: 63}, {x: Date.UTC(2019,0,19,10), y: 3, ind: 66}, {x: Date.UTC(2019,0,19,13), y: 3, ind: 69}, {x: Date.UTC(2019,0,19,16), y: 3, ind: 72}, {x: Date.UTC(2019,0,19,19), y: 3, ind: 75}, {x: Date.UTC(2019,0,19,22), y: 3, ind: 78}, {x: Date.UTC(2019,0,20,1), y: 3, ind: 81}]; arr_pressure=[{x: Date.UTC(2019,0,16,16), y: 741, ind: 0}, {x: Date.UTC(2019,0,16,19), y: 741, ind: 3}, {x: Date.UTC(2019,0,16,22), y: 741, ind: 6}, {x: Date.UTC(2019,0,17,1), y: 741, ind: 9}, {x: Date.UTC(2019,0,17,4), y: 741, ind: 12}, {x: Date.UTC(2019,0,17,7), y: 743, ind: 15}, {x: Date.UTC(2019,0,17,10), y: 744, ind: 18}, {x: Date.UTC(2019,0,17,13), y: 746, ind: 21}, {x: Date.UTC(2019,0,17,16), y: 748, ind: 24}, {x: Date.UTC(2019,0,17,19), y: 748, ind: 27}, {x: Date.UTC(2019,0,17,22), y: 749, ind: 30}, {x: Date.UTC(2019,0,18,1), y: 748, ind: 33}, {x: Date.UTC(2019,0,18,4), y: 749, ind: 36}, {x: Date.UTC(2019,0,18,7), y: 749, ind: 39}, {x: Date.UTC(2019,0,18,10), y: 748, ind: 42}, {x: Date.UTC(2019,0,18,13), y: 748, ind: 45}, {x: Date.UTC(2019,0,18,16), y: 749, ind: 48}, {x: Date.UTC(2019,0,18,19), y: 748, ind: 51}, {x: Date.UTC(2019,0,18,22), y: 748, ind: 54}, {x: Date.UTC(2019,0,19,1), y: 747, ind: 57}, {x: Date.UTC(2019,0,19,4), y: 747, ind: 60}, {x: Date.UTC(2019,0,19,7), y: 746, ind: 63}, {x: Date.UTC(2019,0,19,10), y: 745, ind: 66}, {x: Date.UTC(2019,0,19,13), y: 745, ind: 69}, {x: Date.UTC(2019,0,19,16), y: 744, ind: 72}, {x: Date.UTC(2019,0,19,19), y: 745, ind: 75}, {x: Date.UTC(2019,0,19,22), y: 746, ind: 78}, {x: Date.UTC(2019,0,20,1), y: 747, ind: 81}]; arr_precip_val=[{x: Date.UTC(2019,0,16,19), y: 0.6, ind: 3}, {x: Date.UTC(2019,0,16,22), y: 0.8, ind: 6}, {x: Date.UTC(2019,0,17,1), y: 1.9, ind: 9}, {x: Date.UTC(2019,0,17,4), y: 1.8, ind: 12}, {x: Date.UTC(2019,0,17,7), y: null, ind: 15}, {x: Date.UTC(2019,0,17,10), y: 0.7, ind: 18}, {x: Date.UTC(2019,0,17,13), y: null, ind: 21}, {x: Date.UTC(2019,0,17,16), y: null, ind: 24}, {x: Date.UTC(2019,0,17,19), y: null, ind: 27}, {x: Date.UTC(2019,0,17,22), y: null, ind: 30}, {x: Date.UTC(2019,0,18,1), y: null, ind: 33}, {x: Date.UTC(2019,0,18,4), y: null, ind: 36}, {x: Date.UTC(2019,0,18,7), y: null, ind: 39}, {x: Date.UTC(2019,0,18,10), y: null, ind: 42}, {x: Date.UTC(2019,0,18,13), y: null, ind: 45}, {x: Date.UTC(2019,0,18,16), y: null, ind: 48}, {x: Date.UTC(2019,0,18,19), y: null, ind: 51}, {x: Date.UTC(2019,0,18,22), y: null, ind: 54}, {x: Date.UTC(2019,0,19,1), y: null, ind: 57}, {x: Date.UTC(2019,0,19,4), y: null, ind: 60}, {x: Date.UTC(2019,0,19,7), y: null, ind: 63}, {x: Date.UTC(2019,0,19,10), y: null, ind: 66}, {x: Date.UTC(2019,0,19,13), y: 0.2, ind: 69}, {x: Date.UTC(2019,0,19,16), y: null, ind: 72}, {x: Date.UTC(2019,0,19,19), y: 0.6, ind: 75}, {x: Date.UTC(2019,0,19,22), y: null, ind: 78}, {x: Date.UTC(2019,0,20,1), y: null, ind: 81}]; arr_precip_ver=[{x: Date.UTC(2019,0,16,19), y: 55, ind: 3}, {x: Date.UTC(2019,0,16,22), y: 55, ind: 6}, {x: Date.UTC(2019,0,17,1), y: 55, ind: 9}, {x: Date.UTC(2019,0,17,4), y: 84, ind: 12}, {x: Date.UTC(2019,0,17,7), y: 45, ind: 15}, {x: Date.UTC(2019,0,17,10), y: 55, ind: 18}, {x: Date.UTC(2019,0,17,13), y: 45, ind: 21}, {x: Date.UTC(2019,0,17,16), y: 5, ind: 24}, {x: Date.UTC(2019,0,17,19), y: 5, ind: 27}, {x: Date.UTC(2019,0,17,22), y: 5, ind: 30}, {x: Date.UTC(2019,0,18,1), y: 5, ind: 33}, {x: Date.UTC(2019,0,18,4), y: 5, ind: 36}, {x: Date.UTC(2019,0,18,7), y: 9, ind: 39}, {x: Date.UTC(2019,0,18,10), y: 9, ind: 42}, {x: Date.UTC(2019,0,18,13), y: 9, ind: 45}, {x: Date.UTC(2019,0,18,16), y: 9, ind: 48}, {x: Date.UTC(2019,0,18,19), y: 45, ind: 51}, {x: Date.UTC(2019,0,18,22), y: 45, ind: 54}, {x: Date.UTC(2019,0,19,1), y: 45, ind: 57}, {x: Date.UTC(2019,0,19,4), y: 45, ind: 60}, {x: Date.UTC(2019,0,19,7), y: 31, ind: 63}, {x: Date.UTC(2019,0,19,10), y: 13, ind: 66}, {x: Date.UTC(2019,0,19,13), y: 55, ind: 69}, {x: Date.UTC(2019,0,19,16), y: 45, ind: 72}, {x: Date.UTC(2019,0,19,19), y: 55, ind: 75}, {x: Date.UTC(2019,0,19,22), y: 45, ind: 78}, {x: Date.UTC(2019,0,20,1), y: 42, ind: 81}]; arr_humidity=[{x: Date.UTC(2019,0,16,16), y: 91, ind: 0}, {x: Date.UTC(2019,0,16,19), y: 92, ind: 3}, {x: Date.UTC(2019,0,16,22), y: 93, ind: 6}, {x: Date.UTC(2019,0,17,1), y: 94, ind: 9}, {x: Date.UTC(2019,0,17,4), y: 95, ind: 12}, {x: Date.UTC(2019,0,17,7), y: 93, ind: 15}, {x: Date.UTC(2019,0,17,10), y: 91, ind: 18}, {x: Date.UTC(2019,0,17,13), y: 89, ind: 21}, {x: Date.UTC(2019,0,17,16), y: 86, ind: 24}, {x: Date.UTC(2019,0,17,19), y: 87, ind: 27}, {x: Date.UTC(2019,0,17,22), y: 87, ind: 30}, {x: Date.UTC(2019,0,18,1), y: 88, ind: 33}, {x: Date.UTC(2019,0,18,4), y: 88, ind: 36}, {x: Date.UTC(2019,0,18,7), y: 87, ind: 39}, {x: Date.UTC(2019,0,18,10), y: 86, ind: 42}, {x: Date.UTC(2019,0,18,13), y: 84, ind: 45}, {x: Date.UTC(2019,0,18,16), y: 83, ind: 48}, {x: Date.UTC(2019,0,18,19), y: 85, ind: 51}, {x: Date.UTC(2019,0,18,22), y: 87, ind: 54}, {x: Date.UTC(2019,0,19,1), y: 89, ind: 57}, {x: Date.UTC(2019,0,19,4), y: 92, ind: 60}, {x: Date.UTC(2019,0,19,7), y: 91, ind: 63}, {x: Date.UTC(2019,0,19,10), y: 91, ind: 66}, {x: Date.UTC(2019,0,19,13), y: 90, ind: 69}, {x: Date.UTC(2019,0,19,16), y: 90, ind: 72}, {x: Date.UTC(2019,0,19,19), y: 91, ind: 75}, {x: Date.UTC(2019,0,19,22), y: 93, ind: 78}, {x: Date.UTC(2019,0,20,1), y: 94, ind: 81}]; arr_phenomenon=[{x: Date.UTC(2019,0,16,19), y: \"/images/icons/30px/12.png\", ind: 3}, {x: Date.UTC(2019,0,16,22), y: \"/images/icons/30px/12.png\", ind: 6}, {x: Date.UTC(2019,0,17,1), y: \"/images/icons/30px/12.png\", ind: 9}, {x: Date.UTC(2019,0,17,4), y: \"/images/icons/30px/2.png\", ind: 12}, {x: Date.UTC(2019,0,17,7), y: \"/images/icons/30px/6.png\", ind: 15}, {x: Date.UTC(2019,0,17,10), y: \"/images/icons/30px/12.png\", ind: 18}, {x: Date.UTC(2019,0,17,13), y: \"/images/icons/30px/6.png\", ind: 21}, {x: Date.UTC(2019,0,17,16), y: \"/images/icons/30px/5.png\", ind: 24}, {x: Date.UTC(2019,0,17,19), y: \"/images/icons/30px/6.png\", ind: 27}, {x: Date.UTC(2019,0,17,22), y: \"/images/icons/30px/6.png\", ind: 30}, {x: Date.UTC(2019,0,18,1), y: \"/images/icons/30px/6.png\", ind: 33}, {x: Date.UTC(2019,0,18,4), y: \"/images/icons/30px/7.png\", ind: 36}, {x: Date.UTC(2019,0,18,7), y: \"/images/icons/30px/7.png\", ind: 39}, {x: Date.UTC(2019,0,18,10), y: \"/images/icons/30px/7.png\", ind: 42}, {x: Date.UTC(2019,0,18,13), y: \"/images/icons/30px/6.png\", ind: 45}, {x: Date.UTC(2019,0,18,16), y: \"/images/icons/30px/6.png\", ind: 48}, {x: Date.UTC(2019,0,18,19), y: \"/images/icons/30px/6.png\", ind: 51}, {x: Date.UTC(2019,0,18,22), y: \"/images/icons/30px/6.png\", ind: 54}, {x: Date.UTC(2019,0,19,1), y: \"/images/icons/30px/6.png\", ind: 57}, {x: Date.UTC(2019,0,19,4), y: \"/images/icons/30px/6.png\", ind: 60}, {x: Date.UTC(2019,0,19,7), y: \"/images/icons/30px/6.png\", ind: 63}, {x: Date.UTC(2019,0,19,10), y: \"/images/icons/30px/5.png\", ind: 66}, {x: Date.UTC(2019,0,19,13), y: \"/images/icons/30px/12.png\", ind: 69}, {x: Date.UTC(2019,0,19,16), y: \"/images/icons/30px/6.png\", ind: 72}, {x: Date.UTC(2019,0,19,19), y: \"/images/icons/30px/12.png\", ind: 75}, {x: Date.UTC(2019,0,19,22), y: \"/images/icons/30px/6.png\", ind: 78}, {x: Date.UTC(2019,0,20,1), y: \"/images/icons/30px/6.png\", ind: 81}]; arr_phenomenon_name=[{x: Date.UTC(2019,0,16,19), y: \"Переменная облачность, небольшой снег\", ind: 3}, {x: Date.UTC(2019,0,16,22), y: \"Переменная облачность, небольшой снег\", ind: 6}, {x: Date.UTC(2019,0,17,1), y: \"Переменная облачность, небольшой снег\", ind: 9}, {x: Date.UTC(2019,0,17,4), y: \"Облачно, снег\", ind: 12}, {x: Date.UTC(2019,0,17,7), y: \"Переменная облачность, без осадков\", ind: 15}, {x: Date.UTC(2019,0,17,10), y: \"Переменная облачность, небольшой снег\", ind: 18}, {x: Date.UTC(2019,0,17,13), y: \"Переменная облачность, без осадков\", ind: 21}, {x: Date.UTC(2019,0,17,16), y: \"Облачно, без осадков\", ind: 24}, {x: Date.UTC(2019,0,17,19), y: \"Переменная облачность, без осадков\", ind: 27}, {x: Date.UTC(2019,0,17,22), y: \"Переменная облачность, без осадков\", ind: 30}, {x: Date.UTC(2019,0,18,1), y: \"Переменная облачность, без осадков\", ind: 33}, {x: Date.UTC(2019,0,18,4), y: \"Малооблачно, без осадков\", ind: 36}, {x: Date.UTC(2019,0,18,7), y: \"Малооблачно, без осадков\", ind: 39}, {x: Date.UTC(2019,0,18,10), y: \"Малооблачно, без осадков\", ind: 42}, {x: Date.UTC(2019,0,18,13), y: \"Переменная облачность, без осадков\", ind: 45}, {x: Date.UTC(2019,0,18,16), y: \"Переменная облачность, без осадков\", ind: 48}, {x: Date.UTC(2019,0,18,19), y: \"Переменная облачность, без осадков\", ind: 51}, {x: Date.UTC(2019,0,18,22), y: \"Переменная облачность, без осадков\", ind: 54}, {x: Date.UTC(2019,0,19,1), y: \"Переменная облачность, без осадков\", ind: 57}, {x: Date.UTC(2019,0,19,4), y: \"Переменная облачность, без осадков\", ind: 60}, {x: Date.UTC(2019,0,19,7), y: \"Переменная облачность, без осадков\", ind: 63}, {x: Date.UTC(2019,0,19,10), y: \"Облачно, без осадков\", ind: 66}, {x: Date.UTC(2019,0,19,13), y: \"Переменная облачность, небольшой снег\", ind: 69}, {x: Date.UTC(2019,0,19,16), y: \"Переменная облачность, без осадков\", ind: 72}, {x: Date.UTC(2019,0,19,19), y: \"Переменная облачность, небольшой снег\", ind: 75}, {x: Date.UTC(2019,0,19,22), y: \"Переменная облачность, без осадков\", ind: 78}, {x: Date.UTC(2019,0,20,1), y: \"Переменная облачность, без осадков\", ind: 81}]; Highcharts.setOptions({ lang: { months: ['января','февраля','марта','апреля','мая','июня','июля','августа','сентября','октября','ноября','декабря'], shortMonths: ['Янв','Фев','Мар','Апр','Май','Июн','Июл','Авг','Сен','Окт','Ноя','Дек'], weekdays: ['Воскресенье','Понедельник','Вторник','Среда','Четверг','Пятница','Суббота'], rangeSelectorZoom: 'Маcштаб' },  colors: ['#ED561B', '#50B432', '#68CFE8', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#FFF263', '#6AF9C4']}); function tooltipFormatter(tooltip){ var index = tooltip.points[0].point.ind;  var ost_= index % 3; if (index==0 || ost_==0){ var ret = '<small>' + Highcharts.dateFormat('%A, %b %e, %H:%M', tooltip.x) + ' (время местное)</small><br>'; for(var i=0;i<arr_phenomenon_name.length;i++){ if (arr_phenomenon_name[i]['ind']==index) {ret += '<b>' + arr_phenomenon_name[i]['y'] + '</b>';}} ret += '<table>'; Highcharts.each(tooltip.points, function (point) { var series = point.series; if  (series.name=='Осадки'){} else {ret += '<tr><td style=\"white-space:nowrap\"><span style=\"color:' + series.color + '\">\\\\u25CF</span> ' + series.name + ': </td><td style=\"white-space:nowrap\">' + Highcharts.pick(point.point.value, point.y) + series.options.tooltip.valueSuffix + '</td></tr>';} }); for(var i=0;i<arr_precip_val.length;i++){ \\tif (arr_precip_val[i]['ind']==index) { var osadki=arr_precip_val[i]['y'];  if (osadki==null){osadki=0;}  if (osadki==0){ ret += '<tr><td style=\"white-space:nowrap\"><span style=\"color:#058DC7\">\\\\u25CF</span> ' + 'Осадки' + ': </td><td style=\"white-space:nowrap\">' + osadki + ' мм' + '</td></tr>';  }else{ ret += '<tr><td style=\"white-space:nowrap\"><span style=\"color:#058DC7\">\\\\u25CF</span> ' + 'Осадки' + ': </td><td style=\"white-space:nowrap\">' + osadki + ' мм' + ' ('+ arr_precip_ver[i]['y']+'%)'+'</td></tr>';  } }} for(var i=0;i<arr_wind_dir_name.length;i++){ if (arr_wind_dir_name[i]['ind']==index) { ret += '<tr><td style=\"vertical-align: top\">\\\\u25CF Ветер</td><td style=\"white-space:nowrap\">' +   arr_wind_dir_name[i]['y']+'<br>' +arr_wind_speed[i]['y'] + ' м/с</td></tr>'; }} ret += '</table>'; return ret;} else return false;} var chart1 = new Highcharts.Chart({ chart: { renderTo: 'container', type: 'line', plotBorderWidth: 1, spacingTop:0}, title: {  text: ''}, alignTicks:false,  credits: {enabled: false}, tooltip: { shared: true, useHTML: true, formatter: function () { return tooltipFormatter(this);}}, xAxis: [{ type: 'datetime',  tickInterval: 6 * 36e5, minorTickInterval: 2*36e5, tickLength: 0,   gridLineWidth: 1,  gridLineColor: '#F0F0F0', startOnTick: false, endOnTick: false, minPadding: 0, maxPadding: 0, offset: 30, showLastLabel: true,  min: Date.UTC(2019,0,16,15), max: Date.UTC(2019,0,20,2), labels: { format: '{value:%H}'}},  { linkedTo: 0, type: 'datetime', tickInterval: 24 * 3600 * 1000,  labels: { format: '{value:<span style=\"font-size: 12px; font-weight: bold\">%A</span><br>%e %B %Y}',  align: 'left', x: 3, y: -5 }, opposite: true, tickLength: 20, gridLineWidth: 1}], yAxis: [{  gridLineWidth: 0, tickPositions: [-55,29], labels: { enabled: false}, min:-55, max:29, startOnTick: false, endOnTick: false,  title: { text: null, style: { color: Highcharts.getOptions().colors[0] }} }, { gridLineWidth: 0, tickPositions: [673,753], min:673, max:753, startOnTick: false, endOnTick: false, title: { text: null, style: { color: Highcharts.getOptions().colors[1]}}, labels: { enabled: false}, opposite: true}, { gridLineWidth: 0, tickPositions: [47,167],min:47,max:167, startOnTick: false, endOnTick: false, title: { text: null, style: { color: Highcharts.getOptions().colors[2]}},  labels: { enabled: false},opposite: true}, { tickPositions: [0,12],title: { text: null}, max:12, labels: { enabled: false}, gridLineWidth: 0, tickLength: 0} ],  legend: {enabled: false},  series: [{ name: 'Температура',type: 'spline', yAxis: 0, allowDecimals: true,  marker: {radius: 2},  data: arr_temperature, dataLabels: { enabled: true, style:{fontWeight: 'normal'}, allowOverlap:true, formatter: function()    { if (dt_temp==0) { dt_temp=1; return this.y+' °C'; } else {\\tdt_temp=0;}}, x: 0, y: 25,color: Highcharts.getOptions().colors[0]}, tooltip: { valueSuffix: ' °C'}}, {name: 'Давление ', type: 'spline',yAxis: 1, data: arr_pressure, dataLabels: { enabled: true, style:{fontWeight: 'normal'}, allowOverlap:true,  formatter: function(){ if (dt_press==0) {dt_press=1; return this.y;}else{dt_press=0;} },  x: 0, y: 20,color: Highcharts.getOptions().colors[1]}, marker: { enabled: false },dashStyle: 'shortdot', tooltip: { valueSuffix: ' мм рт.ст.'}}, {name: 'Влажность', type: 'spline',yAxis: 2, data: arr_humidity,  dataLabels: { enabled: true, allowOverlap:true, style:{fontWeight: 'normal', textOutline: '2px'},  formatter: function(){ if (dt_rh==0){dt_rh=1; return this.y+'%';} else {dt_rh=0;}}, x: 0, y: 20,color: Highcharts.getOptions().colors[2]}, marker: { enabled: false },dashStyle: 'shortdot', tooltip: { valueSuffix: ' %'}}, {name: 'Осадки', data:arr_precip_val, type: 'column', pointRange: 3 * 3600 * 1000, pointPlacement: -0.5, color: '#058DC7', yAxis: 3, groupPadding: 0, pointPadding: 0, borderWidth: 0, shadow: false,  dataLabels: { enabled: true, allowOverlap:true, formatter: function () {if (this.y > 0) { return this.y;}}, style: {fontSize: '10px'} }, minPointLength: 2, tooltip: { valueSuffix: 'мм' }} ]}, function(chart) {  chart.renderer.path(['M', 10, 382,'L', 800 - 10, 382]).attr({'stroke': chart.options.chart.plotBorderColor,'stroke-width': 1}).add();  for(var i=0;i<chart.series[1].data.length;i++){  var path = ['M', 0, 7,'L', -1.5, 7, 0, 10, 1.5, 7, 0, 7, 0, -10];  var point = chart.series[1].data[i];  var point_ind=point.ind;  var point_ph = chart.series[0].data[i]; var x = point.plotX + chart.plotLeft;   var y = 400; if (i in arr_wind_speed){ var wnd_speed=arr_wind_speed[i]['y']; if (wnd_speed==0){ chart.renderer.circle(x, y, 10).attr({ fill: 'none', stroke: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black', 'stroke-width': 1.5, zIndex: 5}) .add();} else { if (wnd_speed<2) { } else if (wnd_speed<4){ path.push('M', 0, -8, 'L', 4, -8); } else if (wnd_speed<7){ path.push(0, -10, 7, -10);} else if (wnd_speed<9) {path.push(0, -10, 7, -10); path.push('M', 0, -7, 'L', 4, -7);} else if (wnd_speed<11){path.push(0, -10, 7, -10); path.push('M', 0, -7, 'L', 7, -7);} else if (wnd_speed<14){ path.push(0, -10, 7, -10); path.push('M', 0, -7, 'L', 7, -7); path.push('M', 0, -4, 'L', 4, -4);} else if (wnd_speed<17){path.push(0, -10, 7, -10); path.push('M', 0, -7, 'L', 7, -7); path.push('M', 0, -4, 'L', 7, -4);} else if (wnd_speed<19){path.push(0, -10, 7, -10); path.push('M', 0, -7, 'L', 7, -7); path.push('M', 0, -4, 'L', 7, -4);path.push('M', 0, -1, 'L', 4, -1);} else if (wnd_speed<22){path.push(0, -10, 7, -10); path.push('M', 0, -7, 'L', 7, -7); path.push('M', 0, -4, 'L', 7, -4);path.push('M', 0, -1, 'L', 7, -1);} else if (wnd_speed>=22){path.push(0, -10, 7, -10); path.push('M', 0, -7, 'L', 7, -7); path.push('M', 0, -4, 'L', 7, -4);path.push('M', 0, -1, 'L', 7, -1);path.push('M', 0, 2, 'L', 4, 2);} var wnd_dir=arr_wind_dir[i]['y'];  chart.renderer.path(path).attr({rotation: parseInt(wnd_dir, 10), translateX: x, translateY: y, stroke: 'black', 'stroke-width': 1.5, zIndex: 5 }) .add();}  } for (var i_phen=0;i_phen<arr_phenomenon.length;i_phen++) {if (arr_phenomenon[i_phen]['ind']==point_ind) { chart.renderer.image(arr_phenomenon[i_phen]['y'], point.plotX + chart.plotLeft - 20, point_ph.plotY + chart.plotTop - 45, 30, 30) .attr({ zIndex: 4})  .add();  }  }  }  for(var i=0;i<chart.series[3].data.length;i++){  var point_1 = chart.series[3].data[i];  var pri_val=arr_precip_val[i]['y'];  if (pri_val==null){ text = chart.renderer.text('0',point_1.plotX + chart.plotLeft - 3, 375).attr({zIndex: 5}).css({fontSize: '10px'}).add();}  }  });   });  </script> <div id=\"container\" style=\"width: 800px; height: 450px;\"> </div> <div class=\"zametka_gr\">Статус информации: прогноз рассчитан автоматически (<a href=\"/statusmrf\" target=\"_blank\" >о статусе данной информации</a>)</div>";

        HourlyForecast hf = DailyForecastParser.parse(payload);

        Assert.assertFalse(hf.isEmpty());
    }
}